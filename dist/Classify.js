define("Classify.Interface",[],function(){function a(a){function c(a,b){var c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c])}function d(a){function b(){}return b.prototype=a,new b}var b=function(){};return a.Name=a.Name||"Unnamed",a.Extends?(b.Super=a.Extends.prototype,b.prototype=d(b.Super),c(a,b.prototype),delete b.prototype.Extends):b.prototype=a,b}return a}),define("Utils/Lang/kindOf",[],function(){function d(d){return d===null?"Null":d===c?"Undefined":a.exec(b.call(d))[1]}var a=/^\[object (.*)\]$/,b=Object.prototype.toString,c;return d}),define("Utils/Lang/isKind",["./kindOf"],function(a){function b(b,c){return a(b)===c}return b}),define("Utils/Lang/isFunction",["./isKind"],function(a){function b(b){return a(b,"Function")}return b}),define("Utils/Lang/isObject",["./isKind"],function(a){function b(b){return a(b,"Object")}return b}),define("Classify.Abstract",["Trinity/Classify","Utils/Lang/isFunction","Utils/Lang/isObject","require"],function(a,b,c,d){function e(a){function h(){if(h.caller instanceof this.$constructor)g.apply(this,arguments);else throw new Error("An abstract class cannot be instantiated.")}if(!c(a))throw new TypeError('Argument "params" must be an object.');var d=a.Abstracts||{},e=!1,f;for(f in d)if(d.hasOwnProperty(f)&&b(d[f])){e=!0;break}if(!e)throw new Error("Abstract classes expect at least one abstract method.");var g=a.initialize;a.initialize=h}return function(b){a=d("Trinity/Classify"),b.$abstract=!0,e(b);var c=a(b);return c}}),define("Trinity/Classify",["Classify.Abstract","Classify.Interface","Utils/Lang/isFunction","Utils/Lang/isObject"],function(a,b,c,d){function e(a){function e(a,b){var c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c])}function f(a,b){var c,d=a.length,f,g;for(c=0;c<d;c+=1)g=a[c],g.prototype&&g.prototype.constructor?(f=g.prototype.constructor,delete g.prototype.constructor,e(g.prototype,b.prototype),g.prototype.constructor=f):e(g.prototype||g,b.prototype)}function g(a,c,d){var e=function(a){return Function.prototype.bind?a.bind(c):function(){return a.apply(c,arguments)}},f=a.length-1;for(f;f>=0;f-=1)d[a[f]]=e(d[a[f]],b)}function h(a){function b(){}return b.prototype=a,new b}function i(a,b){var d,e,f,g;for(d=a.length-1;d>=0;d-=1){g=a[d];for(e in g.prototype)if(c(g.prototype[e])){if(!b.prototype.hasOwnProperty(e))throw new Error("Class does not implements Interface "+g.Name+' correctly, "'+e+'()" was not found.')}else if(e==="Statics"){if(!b.prototype.hasOwnProperty(e))throw new Error("Class does not implements Interface "+g.Name+" correctly, static methods missing.");for(f in g.prototype.Statics)if(c(g.prototype.Statics[f])&&!b.prototype.Statics.hasOwnProperty(f))throw new Error("Class does not implements Interface "+g.Name+' correctly, static method "'+f+'"() was not found')}}}if(!d(a))throw new TypeError('Argument "params" must be an object.');if(a.Abstracts&&a.$abstract!==!0)throw new Error("Concrete classes can't defined abstract methods.");var b=a.initialize;return a.$abstract&&delete a.$abstract,a.Extends?(b=b||a.Extends.prototype.initialize,b.Super=a.Extends.prototype,b.prototype=h(b.Super),e(a,b.prototype),delete b.prototype.Extends):(b=b||function(){},b.prototype=a),b.prototype.constructor=b,b.prototype.$constructor=b,a.Borrows&&(f(a.Borrows,b),delete b.prototype.Borrows),a.Binds&&(g(a.Binds,b,b.prototype),delete b.prototype.Binds),a.Statics&&e(a.Statics,b),a.Implements&&(i(a.Implements,b),delete b.prototype.Implements),a.Statics&&delete b.prototype.Statics,b}return e.Abstract=a,e.Interface=b,e})